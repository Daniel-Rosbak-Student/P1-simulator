Index: program/main.c
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/program/main.c b/program/main.c
--- a/program/main.c	
+++ b/program/main.c	
@@ -29,6 +29,7 @@
     double costOfTransport;
 } RegionResultStruct;
 
+//if the user chooses to load settings from a file, this function is called
 RegionStruct* readFile(int* numOfRegions) {
 
 // reads the file given by the user for data for the region(s)
@@ -79,7 +80,7 @@
             fscanf(regionsFile, " %lf%*c", &newRegion[i].costPerUnit[j]);
         }
 
-        //we scan transport cost for each producer
+        //we scan transport cost per km for each producer
         for (int j = 0; j < newRegion[i].numOfProducers; ++j) {
             fscanf(regionsFile, " %lf%*c", &newRegion[i].transportCost[j]);
         }
@@ -88,7 +89,7 @@
     return newRegion;
 }
 
-// if the user chooses to input data themselves
+// if the user chooses to input data themselves this function is called
 RegionStruct* readFromTerminal(int* numOfRegions) {
     int regions, producers, organizations, foodtype;
 
@@ -165,7 +166,7 @@
             scanf(" %lf", &newRegion[i].costPerUnit[j]);
         }
 
-        printf("Please enter transportation costs of the excess food per producer (seperated by space): ");
+        printf("Please enter transportation cost per km of the excess food per producer (seperated by space): ");
 
         for (int j = 0; j < producers; ++j){
             scanf(" %lf", &newRegion[i].transportCost[j]);
@@ -265,7 +266,7 @@
                     for (int l = 0; l < regions[j].numOfProducers; ++l) {
                         if (regions[j].baseExcessPerOrg > 0) {
                             if (regions[j].baseExcessPerOrg[l] >= regions[j].demandPerOrg[k]) {
-                                (regions[j]. regions[j].transportCost[l] * regions[j].distanceToOrg[k]);
+                                (regions[j].transportCost[l] * regions[j].distanceToOrg[k]);
                             } else {
 
                             }
@@ -328,7 +329,7 @@
 int main() {
 
     char input;
-    int numberOfRegions;
+    int numberOfRegions, numOfIterations;
     RegionStruct* regions;
     RegionResultStruct* results;
 
@@ -350,11 +351,14 @@
         }
     }
 
+    printf("please input number of days to simulate: ");
+    scanf(" %d", &numOfIterations);
+
     printf("%s, %d, %d, %d, %d, %d, %.2lf, %.2lf, %.2lf\n", regions[0].regionName, regions[0].foodType, regions[0].numOfProducers,
            regions[0].baseExcessPerOrg[0], regions[0].numOfOrganizations, regions[0].demandPerOrg[0],
            regions[0].excessVolatility[0], regions[0].costPerUnit[0], regions[0].transportCost[0]);
 
-    calculateIteration(regions, results);
+    calculateIteration(regions, results, numberOfRegions, numOfIterations);
 
     outputResult(results, numberOfRegions);
 
Index: program/cmake-build-debug/.cmake/api/v1/reply/codemodel-v2-4f2a79970af5e9dffdae.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/program/cmake-build-debug/.cmake/api/v1/reply/codemodel-v2-4f2a79970af5e9dffdae.json b/program/cmake-build-debug/.cmake/api/v1/reply/codemodel-v2-4f2a79970af5e9dffdae.json
new file mode 100644
--- /dev/null	
+++ b/program/cmake-build-debug/.cmake/api/v1/reply/codemodel-v2-4f2a79970af5e9dffdae.json	
@@ -0,0 +1,60 @@
+{
+	"configurations" : 
+	[
+		{
+			"directories" : 
+			[
+				{
+					"build" : ".",
+					"jsonFile" : "directory-.-Debug-d0094a50bb2071803777.json",
+					"minimumCMakeVersion" : 
+					{
+						"string" : "3.23"
+					},
+					"projectIndex" : 0,
+					"source" : ".",
+					"targetIndexes" : 
+					[
+						0
+					]
+				}
+			],
+			"name" : "Debug",
+			"projects" : 
+			[
+				{
+					"directoryIndexes" : 
+					[
+						0
+					],
+					"name" : "program",
+					"targetIndexes" : 
+					[
+						0
+					]
+				}
+			],
+			"targets" : 
+			[
+				{
+					"directoryIndex" : 0,
+					"id" : "program::@6890427a1f51a3e7e1df",
+					"jsonFile" : "target-program-Debug-254906a2c30f83480e64.json",
+					"name" : "program",
+					"projectIndex" : 0
+				}
+			]
+		}
+	],
+	"kind" : "codemodel",
+	"paths" : 
+	{
+		"build" : "C:/Users/ghorb/CLionProjects/P1-simulator/program/cmake-build-debug",
+		"source" : "C:/Users/ghorb/CLionProjects/P1-simulator/program"
+	},
+	"version" : 
+	{
+		"major" : 2,
+		"minor" : 4
+	}
+}
Index: .idea/.name
===================================================================
diff --git a/.idea/.name b/.idea/.name
new file mode 100644
--- /dev/null	
+++ b/.idea/.name	
@@ -0,0 +1,1 @@
+program
\ No newline at end of file
